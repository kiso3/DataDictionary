package DataDictionaryNew.Java2;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public class Prijava {
  private String datumPodnosenja;
  private boolean upoznatSaPonudom;
  private String datumObilak;
  private Nadmetanje nadmetanjeField;
  private PrijavaFizicko prijavaFizickoField;
  private PrijavaPravno prijavaPravnoField;
  private List<Object> inLineRef = ListSequence.fromList(new LinkedList<Object>());

  public Prijava() {
  }
  public void setDatumPodnosenja(String newValue) {
    datumPodnosenja = newValue;
  }
  public void setUpoznatSaPonudom(boolean newValue) {
    upoznatSaPonudom = newValue;
  }
  public void setDatumObilak(String newValue) {
    datumObilak = newValue;
  }
  public void setNadmetanjeField(Nadmetanje newValue) {
    nadmetanjeField = newValue;
  }
  public void setPrijavaFizickoField(PrijavaFizicko newValue) {
    if (isInLineRefEmpty()) {
      prijavaFizickoField = newValue;
    }
  }
  public void setPrijavaPravnoField(PrijavaPravno newValue) {
    if (isInLineRefEmpty()) {
      prijavaPravnoField = newValue;
    }
  }
  public String getDatumPodnosenja() {
    return datumPodnosenja;
  }
  public boolean getUpoznatSaPonudom() {
    return upoznatSaPonudom;
  }
  public String getDatumObilak() {
    return datumObilak;
  }
  public Nadmetanje getNadmetanjeField() {
    return nadmetanjeField;
  }
  public PrijavaFizicko getPrijavaFizickoField() {
    return prijavaFizickoField;
  }
  public PrijavaPravno getPrijavaPravnoField() {
    return prijavaPravnoField;
  }
  private void inLineRef() {
    ListSequence.fromList(inLineRef).addElement(prijavaFizickoField);
    ListSequence.fromList(inLineRef).addElement(prijavaPravnoField);
  }
  private boolean isInLineRefEmpty() {
    for (Object item : inLineRef) {
      if (item != null) {
        return false;
      }
    }
    return true;
  }
}
