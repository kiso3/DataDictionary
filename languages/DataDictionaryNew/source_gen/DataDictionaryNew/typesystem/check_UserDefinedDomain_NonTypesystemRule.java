package DataDictionaryNew.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;

public class check_UserDefinedDomain_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_UserDefinedDomain_NonTypesystemRule() {
  }
  public void applyRule(final SNode userDefinedDomain, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    List<SNode> udps = SNodeOperations.getNodeDescendants(SNodeOperations.getNodeAncestor(userDefinedDomain, MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x62cd8899af6d0933L, "DataDictionaryNew.structure.DataDictionary"), false, false), MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, "DataDictionaryNew.structure.UserDefinedDomain"), false, new SAbstractConcept[]{});
    for (SNode node_udp : udps) {
      if (isNotEmptyString(SPropertyOperations.getString(userDefinedDomain, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"))) && (SLinkOperations.getTarget(userDefinedDomain, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01983L, "type")) != null)) {
        if (SPropertyOperations.getString(node_udp, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")).equals(SPropertyOperations.getString(userDefinedDomain, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")))) {
          if ((SLinkOperations.getTarget(userDefinedDomain, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01986L, "restriction")) == null)) {
            if (SPropertyOperations.getInteger(SLinkOperations.getTarget(userDefinedDomain, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01983L, "type")), MetaAdapterFactory.getProperty(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e0197fL, 0x4709666cc5e0e212L, "length")) != SPropertyOperations.getInteger(SLinkOperations.getTarget(node_udp, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01983L, "type")), MetaAdapterFactory.getProperty(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e0197fL, 0x4709666cc5e0e212L, "length")) || SPropertyOperations.getString(SLinkOperations.getTarget(userDefinedDomain, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01983L, "type")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")) != SPropertyOperations.getString(SLinkOperations.getTarget(node_udp, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01983L, "type")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"))) {
              {
                MessageTarget errorTarget = new NodeMessageTarget();
                IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(node_udp, "Domain with this name already exsists. Either change the domain name, or modify type and restriction to match exsisting domain.", "r:b01331ca-60f7-41d0-9131-b144a112f96d(DataDictionaryNew.typesystem)", "7077464071784899596", null, errorTarget);
              }
            }

          } else {
            if (SPropertyOperations.getString(SLinkOperations.getTarget(userDefinedDomain, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01986L, "restriction")), MetaAdapterFactory.getProperty(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01970L, 0x4709666cc5e019edL, "text")) != SPropertyOperations.getString(SLinkOperations.getTarget(node_udp, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01986L, "restriction")), MetaAdapterFactory.getProperty(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01970L, 0x4709666cc5e019edL, "text")) || SPropertyOperations.getInteger(SLinkOperations.getTarget(userDefinedDomain, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01983L, "type")), MetaAdapterFactory.getProperty(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e0197fL, 0x4709666cc5e0e212L, "length")) != SPropertyOperations.getInteger(SLinkOperations.getTarget(node_udp, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01983L, "type")), MetaAdapterFactory.getProperty(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e0197fL, 0x4709666cc5e0e212L, "length")) || SPropertyOperations.getString(SLinkOperations.getTarget(userDefinedDomain, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01983L, "type")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")) != SPropertyOperations.getString(SLinkOperations.getTarget(node_udp, MetaAdapterFactory.getContainmentLink(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, 0x4709666cc5e01983L, "type")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"))) {
              {
                MessageTarget errorTarget = new NodeMessageTarget();
                IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(node_udp, "Domain with this name already exsists. Either change the domain name, or modify type and restriction to match exsisting domain.", "r:b01331ca-60f7-41d0-9131-b144a112f96d(DataDictionaryNew.typesystem)", "8480776358967740785", null, errorTarget);
              }
            }
          }
        }
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x4709666cc5e01982L, "DataDictionaryNew.structure.UserDefinedDomain");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static boolean isNotEmptyString(String str) {
    return str != null && str.length() > 0;
  }
}
