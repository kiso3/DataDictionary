package DataDictionary.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myExclusiveSpecializationInLine__BehaviorDescriptor = new ExclusiveSpecializationInLine__BehaviorDescriptor();
  private final BHDescriptor myFieldStructure__BehaviorDescriptor = new FieldStructure__BehaviorDescriptor();
  private final BHDescriptor myNoExclusiveSpecializationInLine__BehaviorDescriptor = new NoExclusiveSpecializationInLine__BehaviorDescriptor();
  private final BHDescriptor myAggregationAsAField__BehaviorDescriptor = new AggregationAsAField__BehaviorDescriptor();
  private final BHDescriptor myField__BehaviorDescriptor = new Field__BehaviorDescriptor();
  private final BHDescriptor myAbstractField__BehaviorDescriptor = new AbstractField__BehaviorDescriptor();
  private final BHDescriptor mySetOfComponentsAsAField__BehaviorDescriptor = new SetOfComponentsAsAField__BehaviorDescriptor();
  private final BHDescriptor myStructureAsAField__BehaviorDescriptor = new StructureAsAField__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_846f5o_a0l.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myAbstractField__BehaviorDescriptor;
          }
          break;
        case 1:
          if (true) {
            return myAggregationAsAField__BehaviorDescriptor;
          }
          break;
        case 2:
          if (true) {
            return myExclusiveSpecializationInLine__BehaviorDescriptor;
          }
          break;
        case 3:
          if (true) {
            return myField__BehaviorDescriptor;
          }
          break;
        case 4:
          if (true) {
            return myFieldStructure__BehaviorDescriptor;
          }
          break;
        case 5:
          if (true) {
            return myNoExclusiveSpecializationInLine__BehaviorDescriptor;
          }
          break;
        case 6:
          if (true) {
            return mySetOfComponentsAsAField__BehaviorDescriptor;
          }
          break;
        case 7:
          if (true) {
            return myStructureAsAField__BehaviorDescriptor;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_846f5o_a0l = buildConceptIndices(MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x62cd8899af74f69dL, "DataDictionary.structure.AbstractField"), MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x5c982cbd675b3b19L, "DataDictionary.structure.AggregationAsAField"), MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x5947026603af5eb4L, "DataDictionary.structure.ExclusiveSpecializationInLine"), MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x62cd8899af6dcd98L, "DataDictionary.structure.Field"), MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x5947026603b238f7L, "DataDictionary.structure.FieldStructure"), MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x5947026603c72d78L, "DataDictionary.structure.NoExclusiveSpecializationInLine"), MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x62cd8899af7681e1L, "DataDictionary.structure.SetOfComponentsAsAField"), MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x62cd8899af79708bL, "DataDictionary.structure.StructureAsAField"));
}
