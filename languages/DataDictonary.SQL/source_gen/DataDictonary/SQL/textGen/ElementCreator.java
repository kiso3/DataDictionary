package DataDictonary.SQL.textGen;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public abstract class ElementCreator {
  public static void byElement(SNode node, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("CREATE DATABASE ");
    tgs.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
    tgs.newLine();
    tgs.append("GO");
    tgs.newLine();
    tgs.append("USE ");
    tgs.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
    tgs.newLine();
    tgs.append("GO");
    tgs.newLine();
    ElementCreator.createShema(node, ctx);
  }
  protected static void createShema(SNode node, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    for (SNode shema : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846676L, 0x7df58b09c184667cL, "shemas"))) {
      tgs.append("CREATE SCHEMA ");
      tgs.append(SPropertyOperations.getString(shema, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
      tgs.newLine();
      tgs.append("GO");
      tgs.newLine();
      ElementCreator.createRelation(shema, ctx);
    }
    for (SNode shema : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846676L, 0x7df58b09c184667cL, "shemas"))) {
      for (SNode relation : SLinkOperations.getChildren(shema, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846679L, 0x7df58b09c1846af7L, "relaions"))) {
        {
          final SNode baseRelation = relation;
          if (SNodeOperations.isInstanceOf(baseRelation, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846681L, "DataDictonary.SQL.structure.BaseRelation"))) {
            ElementCreator.createConstrints(baseRelation, ctx);
          }
        }
      }
    }
    for (SNode shema : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846676L, 0x7df58b09c184667cL, "shemas"))) {
      for (SNode relation : SLinkOperations.getChildren(shema, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846679L, 0x7df58b09c1846af7L, "relaions"))) {
        {
          final SNode baseRelation = relation;
          if (SNodeOperations.isInstanceOf(baseRelation, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846681L, "DataDictonary.SQL.structure.BaseRelation"))) {
            ElementCreator.createFKeyConstraints(baseRelation, ctx);
          }
        }
      }
    }

  }
  protected static void createRelation(SNode shema, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    for (SNode relation : SLinkOperations.getChildren(shema, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846679L, 0x7df58b09c1846af7L, "relaions"))) {
      {
        final SNode baseRelation = relation;
        if (SNodeOperations.isInstanceOf(baseRelation, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846681L, "DataDictonary.SQL.structure.BaseRelation"))) {
          tgs.append("CREATE TABLE ");
          tgs.append(SPropertyOperations.getString(shema, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(".");
          tgs.append(SPropertyOperations.getString(baseRelation, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append("(");
          ElementCreator.createAttribute(baseRelation, ctx);
          tgs.append(")");
          tgs.newLine();
          tgs.append("GO");
          tgs.newLine();
        }
      }
    }
  }
  protected static void createAttribute(SNode baseRelation, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    for (SNode attribute : SLinkOperations.getChildren(baseRelation, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846681L, 0x7df58b09c1846685L, "atributes"))) {
      tgs.indent();
      tgs.newLine();
      tgs.append(SPropertyOperations.getString(attribute, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
      tgs.append(" ");
      ElementCreator.createDomain(SLinkOperations.getTarget(attribute, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846682L, 0x7df58b09c1847bd6L, "domen")), ctx);
      tgs.append(" NOT NULL");
      if (ListSequence.fromList(SLinkOperations.getChildren(baseRelation, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846681L, 0x7df58b09c1846685L, "atributes"))).indexOf(attribute) != ListSequence.fromList(SLinkOperations.getChildren(baseRelation, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846681L, 0x7df58b09c1846685L, "atributes"))).count() - 1) {
        tgs.append(",");
      }
    }
  }
  protected static void createDomain(SNode domen, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    {
      final SNode nodeDomain = domen;
      if (SNodeOperations.isInstanceOf(nodeDomain, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bdcL, "DataDictonary.SQL.structure.Integer"))) {
        tgs.append("integer");
      }
    }
    {
      final SNode nodeDomain = domen;
      if (SNodeOperations.isInstanceOf(nodeDomain, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd9L, "DataDictonary.SQL.structure.Varchar"))) {
        tgs.append("varchar");
        tgs.append("(");
        tgs.append(String.valueOf(SPropertyOperations.getInteger(nodeDomain, MetaAdapterFactory.getProperty(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd9L, 0x7df58b09c1847bdaL, "length"))));
        tgs.append(")");
      }
    }
    {
      final SNode nodeDomain = domen;
      if (SNodeOperations.isInstanceOf(nodeDomain, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x29b11ade5384925aL, "DataDictonary.SQL.structure.Date"))) {
        tgs.append("date");
      }
    }
    {
      final SNode nodeDomain = domen;
      if (SNodeOperations.isInstanceOf(nodeDomain, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x29b11ade53849266L, "DataDictonary.SQL.structure.DateTime"))) {
        tgs.append("datetime");
      }
    }
    {
      final SNode domein = domen;
      if (SNodeOperations.isInstanceOf(domein, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d6513eL, "jetbrains.mps.baseLanguage.structure.BooleanType"))) {
        tgs.append("bit");
      }
    }
  }
  protected static void createConstrints(SNode baseRelation, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    for (SNode constraint : SLinkOperations.getChildren(baseRelation, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846681L, 0x7df58b09c18adcddL, "constrains"))) {
      {
        final SNode nullNode = constraint;
        if (SNodeOperations.isInstanceOf(nullNode, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18b9b00L, "DataDictonary.SQL.structure.Null"))) {
          tgs.append("ALTER TABLE ");
          tgs.append(SPropertyOperations.getString(SNodeOperations.getNodeAncestor(baseRelation, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846679L, "DataDictonary.SQL.structure.Shema"), false, false), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(".");
          tgs.append(SPropertyOperations.getString(baseRelation, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(" ALTER COLUMN ");
          tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(nullNode, MetaAdapterFactory.getReferenceLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18b9b00L, 0x7df58b09c18bc1ffL, "attribute")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(" ");
          ElementCreator.createDomain(SLinkOperations.getTarget(SLinkOperations.getTarget(nullNode, MetaAdapterFactory.getReferenceLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18b9b00L, 0x7df58b09c18bc1ffL, "attribute")), MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846682L, 0x7df58b09c1847bd6L, "domen")), ctx);
          tgs.append(" NULL");
          tgs.newLine();
          tgs.append("GO");
          tgs.newLine();

        }
      }
      {
        final SNode defaultNode = constraint;
        if (SNodeOperations.isInstanceOf(defaultNode, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18b2667L, "DataDictonary.SQL.structure.Default"))) {
          tgs.append("ALTER TABLE ");
          tgs.append(SPropertyOperations.getString(SNodeOperations.getNodeAncestor(baseRelation, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846679L, "DataDictonary.SQL.structure.Shema"), false, false), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(".");
          tgs.append(SPropertyOperations.getString(baseRelation, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(" ADD DEFAULT (");
          tgs.append(SPropertyOperations.getString(defaultNode, MetaAdapterFactory.getProperty(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18b2667L, 0x7df58b09c18b2691L, "valye")));
          tgs.append(")");
          tgs.append(" FOR ");
          tgs.appendNode(SLinkOperations.getTarget(defaultNode, MetaAdapterFactory.getReferenceLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18b2667L, 0x7df58b09c18b2668L, "attribute")));
          tgs.newLine();
          tgs.append("GO");
          tgs.newLine();
        }
      }
      {
        final SNode primaryKey = constraint;
        if (SNodeOperations.isInstanceOf(primaryKey, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc96L, "DataDictonary.SQL.structure.PrimaryKey"))) {
          tgs.append("ALTER TABLE ");
          tgs.append(SPropertyOperations.getString(SNodeOperations.getNodeAncestor(baseRelation, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846679L, "DataDictonary.SQL.structure.Shema"), false, false), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(".");
          tgs.append(SPropertyOperations.getString(baseRelation, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(" ADD CONSTRAINT ");
          tgs.append(SPropertyOperations.getString(primaryKey, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(" PRIMARY KEY (");
          for (SNode item : SLinkOperations.getChildren(primaryKey, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846695L, 0x7df58b09c18481cbL, "keysRef"))) {
            tgs.appendNode(item);
          }
          tgs.append(")");
          tgs.newLine();
          tgs.append("GO");
          tgs.newLine();
        }
      }
      {
        final SNode index = constraint;
        if (SNodeOperations.isInstanceOf(index, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846687L, "DataDictonary.SQL.structure.Index"))) {
          tgs.append("CREATE ");
          tgs.append(SPropertyOperations.getString_def(index, MetaAdapterFactory.getProperty(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846687L, 0x29b11ade5387fd6aL, "indexType"), "UNIQUE"));
          tgs.append(" INDEX ");
          tgs.append(SPropertyOperations.getString(index, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(" ON ");
          tgs.append(SPropertyOperations.getString(baseRelation, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append("(");
          for (SNode item : SLinkOperations.getChildren(index, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846687L, 0x7df58b09c18631feL, "indexRef"))) {
            tgs.appendNode(item);
          }
          tgs.append(")");
          tgs.newLine();
          tgs.append("GO");
          tgs.newLine();
        }
      }
      {
        final SNode check = constraint;
        if (SNodeOperations.isInstanceOf(check, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x3e9b9b772394269fL, "DataDictonary.SQL.structure.Check"))) {
          tgs.append("ALTER TABLE ");
          tgs.append(SPropertyOperations.getString(SNodeOperations.getNodeAncestor(baseRelation, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846679L, "DataDictonary.SQL.structure.Shema"), false, false), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(".");
          tgs.append(SPropertyOperations.getString(baseRelation, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append("   WITH CHECK ADD  CONSTRAINT ");
          tgs.append(SPropertyOperations.getString(check, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(" CHECK (");
          tgs.append(SPropertyOperations.getString(check, MetaAdapterFactory.getProperty(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x3e9b9b772394269fL, 0x3e9b9b77239426a0L, "expression")));
          tgs.append(")");
          tgs.newLine();
          tgs.append("GO");
          tgs.newLine();

        }
      }
    }

  }
  protected static void createFKeyConstraints(SNode baseRelation, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    for (SNode constraint : SLinkOperations.getChildren(baseRelation, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846681L, 0x7df58b09c18adcddL, "constrains"))) {
      {
        final SNode foreignKey = constraint;
        if (SNodeOperations.isInstanceOf(foreignKey, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c184669dL, "DataDictonary.SQL.structure.ForeignKey"))) {
          tgs.append("ALTER TABLE ");
          tgs.append(SPropertyOperations.getString(SNodeOperations.getNodeAncestor(baseRelation, MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846679L, "DataDictonary.SQL.structure.Shema"), false, false), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(".");
          tgs.append(SPropertyOperations.getString(baseRelation, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(" WITH CHECK ADD CONSTRAINT ");
          tgs.append(SPropertyOperations.getString(foreignKey, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(" FOREIGN KEY (");
          for (SNode item : SLinkOperations.getChildren(foreignKey, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846695L, 0x7df58b09c18481cbL, "keysRef"))) {
            tgs.appendNode(item);
          }
          tgs.append(")");
          tgs.append(" REFERENCES ");
          tgs.append(SPropertyOperations.getString(SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(foreignKey, MetaAdapterFactory.getReferenceLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c184669dL, 0x7df58b09c18466a2L, "baseRelation")), MetaAdapterFactory.getConcept(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846679L, "DataDictonary.SQL.structure.Shema"), false, false), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append(".");
          tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(foreignKey, MetaAdapterFactory.getReferenceLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c184669dL, 0x7df58b09c18466a2L, "baseRelation")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
          tgs.append("(");
          for (SNode item : SLinkOperations.getChildren(foreignKey, MetaAdapterFactory.getContainmentLink(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c184669dL, 0x7df58b09c18adcb8L, "foreignKeyRef"))) {
            tgs.appendNode(item);
          }
          tgs.append(")");
          tgs.newLine();
          tgs.append("GO");
          tgs.newLine();
        }
      }

    }
  }
}
