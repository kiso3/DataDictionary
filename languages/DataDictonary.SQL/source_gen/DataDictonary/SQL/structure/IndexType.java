package DataDictonary.SQL.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum IndexType {
  UNIQUE("UNIQUE", "UNIQUE"),
  CLUSTERED("CLUSTERED", "CLUSTERED"),
  NONCLUSTERED("NONCLUSTERED", "NONCLUSTERED");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private IndexType(String name, String value) {
    myName = name;
    myValue = value;
  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<IndexType> getConstants() {
    List<IndexType> list = ListSequence.fromList(new LinkedList<IndexType>());
    ListSequence.fromList(list).addElement(IndexType.UNIQUE);
    ListSequence.fromList(list).addElement(IndexType.CLUSTERED);
    ListSequence.fromList(list).addElement(IndexType.NONCLUSTERED);
    return list;
  }
  public static IndexType getDefault() {
    return IndexType.UNIQUE;
  }
  public static IndexType parseValue(String value) {
    if (value == null) {
      return IndexType.getDefault();
    }
    if (value.equals(IndexType.UNIQUE.getValueAsString())) {
      return IndexType.UNIQUE;
    }
    if (value.equals(IndexType.CLUSTERED.getValueAsString())) {
      return IndexType.CLUSTERED;
    }
    if (value.equals(IndexType.NONCLUSTERED.getValueAsString())) {
      return IndexType.NONCLUSTERED;
    }
    return IndexType.getDefault();
  }
}
