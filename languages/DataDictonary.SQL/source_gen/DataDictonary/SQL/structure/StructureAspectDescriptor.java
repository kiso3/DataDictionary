package DataDictonary.SQL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(22);
  /*package*/ final ConceptDescriptor myConceptAttribute = createDescriptorForAttribute();
  /*package*/ final ConceptDescriptor myConceptBaseRelation = createDescriptorForBaseRelation();
  /*package*/ final ConceptDescriptor myConceptCatalog = createDescriptorForCatalog();
  /*package*/ final ConceptDescriptor myConceptCheck = createDescriptorForCheck();
  /*package*/ final ConceptDescriptor myConceptConstrain = createDescriptorForConstrain();
  /*package*/ final ConceptDescriptor myConceptDate = createDescriptorForDate();
  /*package*/ final ConceptDescriptor myConceptDateTime = createDescriptorForDateTime();
  /*package*/ final ConceptDescriptor myConceptDefault = createDescriptorForDefault();
  /*package*/ final ConceptDescriptor myConceptDomen = createDescriptorForDomen();
  /*package*/ final ConceptDescriptor myConceptForeignKey = createDescriptorForForeignKey();
  /*package*/ final ConceptDescriptor myConceptForeignKeysRef = createDescriptorForForeignKeysRef();
  /*package*/ final ConceptDescriptor myConceptIndex = createDescriptorForIndex();
  /*package*/ final ConceptDescriptor myConceptIndexRef = createDescriptorForIndexRef();
  /*package*/ final ConceptDescriptor myConceptInteger = createDescriptorForInteger();
  /*package*/ final ConceptDescriptor myConceptKey = createDescriptorForKey();
  /*package*/ final ConceptDescriptor myConceptKeysRef = createDescriptorForKeysRef();
  /*package*/ final ConceptDescriptor myConceptNull = createDescriptorForNull();
  /*package*/ final ConceptDescriptor myConceptPredefineDomain = createDescriptorForPredefineDomain();
  /*package*/ final ConceptDescriptor myConceptPrimaryKey = createDescriptorForPrimaryKey();
  /*package*/ final ConceptDescriptor myConceptRelation = createDescriptorForRelation();
  /*package*/ final ConceptDescriptor myConceptShema = createDescriptorForShema();
  /*package*/ final ConceptDescriptor myConceptVarchar = createDescriptorForVarchar();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAttribute.getId(), 0);
    myIndexMap.put(myConceptBaseRelation.getId(), 1);
    myIndexMap.put(myConceptCatalog.getId(), 2);
    myIndexMap.put(myConceptCheck.getId(), 3);
    myIndexMap.put(myConceptConstrain.getId(), 4);
    myIndexMap.put(myConceptDate.getId(), 5);
    myIndexMap.put(myConceptDateTime.getId(), 6);
    myIndexMap.put(myConceptDefault.getId(), 7);
    myIndexMap.put(myConceptDomen.getId(), 8);
    myIndexMap.put(myConceptForeignKey.getId(), 9);
    myIndexMap.put(myConceptForeignKeysRef.getId(), 10);
    myIndexMap.put(myConceptIndex.getId(), 11);
    myIndexMap.put(myConceptIndexRef.getId(), 12);
    myIndexMap.put(myConceptInteger.getId(), 13);
    myIndexMap.put(myConceptKey.getId(), 14);
    myIndexMap.put(myConceptKeysRef.getId(), 15);
    myIndexMap.put(myConceptNull.getId(), 16);
    myIndexMap.put(myConceptPredefineDomain.getId(), 17);
    myIndexMap.put(myConceptPrimaryKey.getId(), 18);
    myIndexMap.put(myConceptRelation.getId(), 19);
    myIndexMap.put(myConceptShema.getId(), 20);
    myIndexMap.put(myConceptVarchar.getId(), 21);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAttribute, myConceptBaseRelation, myConceptCatalog, myConceptCheck, myConceptConstrain, myConceptDate, myConceptDateTime, myConceptDefault, myConceptDomen, myConceptForeignKey, myConceptForeignKeysRef, myConceptIndex, myConceptIndexRef, myConceptInteger, myConceptKey, myConceptKeysRef, myConceptNull, myConceptPredefineDomain, myConceptPrimaryKey, myConceptRelation, myConceptShema, myConceptVarchar);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAttribute;
      case 1:
        return myConceptBaseRelation;
      case 2:
        return myConceptCatalog;
      case 3:
        return myConceptCheck;
      case 4:
        return myConceptConstrain;
      case 5:
        return myConceptDate;
      case 6:
        return myConceptDateTime;
      case 7:
        return myConceptDefault;
      case 8:
        return myConceptDomen;
      case 9:
        return myConceptForeignKey;
      case 10:
        return myConceptForeignKeysRef;
      case 11:
        return myConceptIndex;
      case 12:
        return myConceptIndexRef;
      case 13:
        return myConceptInteger;
      case 14:
        return myConceptKey;
      case 15:
        return myConceptKeysRef;
      case 16:
        return myConceptNull;
      case 17:
        return myConceptPredefineDomain;
      case 18:
        return myConceptPrimaryKey;
      case 19:
        return myConceptRelation;
      case 20:
        return myConceptShema;
      case 21:
        return myConceptVarchar;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForAttribute() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Attribute", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846682L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7df58b09c1847bd6L, "domen", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd3L), false, false, false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052754390"))).children(new String[]{"domen"}, new boolean[]{false}).sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052748930")).create();
  }
  private static ConceptDescriptor createDescriptorForBaseRelation() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.BaseRelation", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846681L)).super_("DataDictonary.SQL.structure.Relation").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c184667eL)).parents("DataDictonary.SQL.structure.Relation").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c184667eL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7df58b09c1846685L, "atributes", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846682L), false, true, false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052748933")), new ConceptDescriptorBuilder.Link(0x7df58b09c18adcddL, "constrains", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L), false, true, false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053172445"))).children(new String[]{"atributes", "constrains"}, new boolean[]{true, true}).sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052748929")).create();
  }
  private static ConceptDescriptor createDescriptorForCatalog() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Catalog", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846676L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7df58b09c184667cL, "shemas", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846679L), false, true, false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052748924"))).children(new String[]{"shemas"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052748918")).create();
  }
  private static ConceptDescriptor createDescriptorForCheck() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Check", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x3e9b9b772394269fL)).super_("DataDictonary.SQL.structure.Constrain").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L)).parents("DataDictonary.SQL.structure.Constrain").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x3e9b9b77239426a0L, "expression", new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "4511370387742008992"))).properties("expression").sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "4511370387742008991")).create();
  }
  private static ConceptDescriptor createDescriptorForConstrain() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Constrain", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).abstract_().sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053172323")).create();
  }
  private static ConceptDescriptor createDescriptorForDate() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Date", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x29b11ade5384925aL)).super_("DataDictonary.SQL.structure.PredefineDomain").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd8L)).parents("DataDictonary.SQL.structure.PredefineDomain").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd8L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x29b11ade5384925bL, "dateFormat", new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "3004211968619090523"))).properties("dateFormat").alias("date", "").sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "3004211968619090522")).create();
  }
  private static ConceptDescriptor createDescriptorForDateTime() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.DateTime", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x29b11ade53849266L)).super_("DataDictonary.SQL.structure.PredefineDomain").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd8L)).parents("DataDictonary.SQL.structure.PredefineDomain").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd8L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x29b11ade53849267L, "DateTimeFormat", new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "3004211968619090535"))).properties("DateTimeFormat").alias("dateTime", "").sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "3004211968619090534")).create();
  }
  private static ConceptDescriptor createDescriptorForDefault() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Default", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18b2667L)).super_("DataDictonary.SQL.structure.Constrain").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L)).parents("DataDictonary.SQL.structure.Constrain").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x7df58b09c18b2691L, "valye", new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053191313"))).properties("valye").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x7df58b09c18b2668L, "attribute", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846682L), false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053191272"))).references("attribute").alias("Default", "").sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053191271")).create();
  }
  private static ConceptDescriptor createDescriptorForDomen() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Domen", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd3L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).abstract_().sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052754387")).create();
  }
  private static ConceptDescriptor createDescriptorForForeignKey() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.ForeignKey", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c184669dL)).super_("DataDictonary.SQL.structure.Key").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846695L)).parents("DataDictonary.SQL.structure.Key").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846695L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x7df58b09c18f77acL, "update", new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053474220")), new ConceptDescriptorBuilder.Prop(0x7df58b09c18f77aeL, "delete", new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053474222"))).properties("update", "delete").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x7df58b09c18466a2L, "baseRelation", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846681L), false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052748962"))).references("baseRelation").childDescriptors(new ConceptDescriptorBuilder.Link(0x7df58b09c18adcb8L, "foreignKeyRef", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18481cdL), false, true, false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053172408"))).children(new String[]{"foreignKeyRef"}, new boolean[]{true}).alias("ForeingKey", "").sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052748957")).create();
  }
  private static ConceptDescriptor createDescriptorForForeignKeysRef() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.ForeignKeysRef", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18481cdL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x7df58b09c1885b5dL, "attribute", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846682L), false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053008221"))).references("attribute").sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052755917")).create();
  }
  private static ConceptDescriptor createDescriptorForIndex() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Index", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846687L)).super_("DataDictonary.SQL.structure.Constrain").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L)).parents("DataDictonary.SQL.structure.Constrain", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x29b11ade5387fd6aL, "indexType", new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "3004211968619314538"))).properties("indexType").childDescriptors(new ConceptDescriptorBuilder.Link(0x7df58b09c18631feL, "indexRef", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18481d0L), false, true, false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052866558"))).children(new String[]{"indexRef"}, new boolean[]{true}).sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052748935")).create();
  }
  private static ConceptDescriptor createDescriptorForIndexRef() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.IndexRef", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18481d0L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x7df58b09c18481d3L, "attribute", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846682L), false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052755923"))).references("attribute").sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052755920")).create();
  }
  private static ConceptDescriptor createDescriptorForInteger() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Integer", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bdcL)).super_("DataDictonary.SQL.structure.PredefineDomain").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd8L)).parents("DataDictonary.SQL.structure.PredefineDomain").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd8L)).alias("integer", "").sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052754396")).create();
  }
  private static ConceptDescriptor createDescriptorForKey() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Key", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846695L)).super_("DataDictonary.SQL.structure.Constrain").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L)).parents("DataDictonary.SQL.structure.Constrain", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7df58b09c18481cbL, "keysRef", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18481c8L), false, true, false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052755915"))).children(new String[]{"keysRef"}, new boolean[]{true}).abstract_().sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052748949")).create();
  }
  private static ConceptDescriptor createDescriptorForKeysRef() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.KeysRef", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18481c8L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x7df58b09c18481c9L, "attribute", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846682L), false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052755913"))).references("attribute").sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052755912")).create();
  }
  private static ConceptDescriptor createDescriptorForNull() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Null", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18b9b00L)).super_("DataDictonary.SQL.structure.Constrain").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L)).parents("DataDictonary.SQL.structure.Constrain").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc63L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x7df58b09c18bc1ffL, "attribute", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846682L), false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053231103"))).references("attribute").alias("Null", "").sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053221120")).create();
  }
  private static ConceptDescriptor createDescriptorForPredefineDomain() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.PredefineDomain", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd8L)).super_("DataDictonary.SQL.structure.Domen").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd3L)).parents("DataDictonary.SQL.structure.Domen").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd3L)).abstract_().sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052754392")).create();
  }
  private static ConceptDescriptor createDescriptorForPrimaryKey() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.PrimaryKey", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c18adc96L)).super_("DataDictonary.SQL.structure.Key").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846695L)).parents("DataDictonary.SQL.structure.Key").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846695L)).sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498053172374")).create();
  }
  private static ConceptDescriptor createDescriptorForRelation() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Relation", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c184667eL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).abstract_().sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052748926")).create();
  }
  private static ConceptDescriptor createDescriptorForShema() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Shema", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1846679L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7df58b09c1846af7L, "relaions", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c184667eL), false, true, false, new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052750071"))).children(new String[]{"relaions"}, new boolean[]{true}).sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052748921")).create();
  }
  private static ConceptDescriptor createDescriptorForVarchar() {
    return new ConceptDescriptorBuilder("DataDictonary.SQL.structure.Varchar", MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd9L)).super_("DataDictonary.SQL.structure.PredefineDomain").version(1).super_(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd8L)).parents("DataDictonary.SQL.structure.PredefineDomain").parentIds(MetaIdFactory.conceptId(0x1e512a67eb48409aL, 0x8f1d3b3721b063dfL, 0x7df58b09c1847bd8L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x7df58b09c1847bdaL, "length", new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052754394"))).properties("length").alias("varchar", "").sourceNode(new SNodePointer("r:de774665-cb25-41a4-9a5a-049d3feca166(DataDictonary.SQL.structure)", "9076313498052754393")).create();
  }
}
